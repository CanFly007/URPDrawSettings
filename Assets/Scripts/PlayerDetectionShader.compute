#pragma kernel CSMain

Texture2D<float4> InputTexture;

RWStructuredBuffer<int> PlayerPixelCounts;

[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    uint2 texCoord = id.xy;

    float4 pixelColor = InputTexture.Load(int3(texCoord, 0));

    int playerIndex = -1;
    bool isRed = pixelColor.r == 1 && pixelColor.g == 0 && pixelColor.b == 0;
    bool isGreen = pixelColor.r == 0 && pixelColor.g == 1 && pixelColor.b == 0;
    bool isBlue = pixelColor.r == 0 && pixelColor.g == 0 && pixelColor.b == 1;
    bool isYellow = pixelColor.r == 1 && pixelColor.g == 1 && pixelColor.b == 0;
    bool isMagenta = pixelColor.r == 1 && pixelColor.g == 0 && pixelColor.b == 1;
    bool isCyan = pixelColor.r == 0 && pixelColor.g == 1 && pixelColor.b == 1;

    if (isRed) InterlockedAdd(PlayerPixelCounts[0], 1);
    else if (isGreen) InterlockedAdd(PlayerPixelCounts[1], 1);
    else if (isBlue) InterlockedAdd(PlayerPixelCounts[2], 1);
    else if (isYellow) InterlockedAdd(PlayerPixelCounts[3], 1);
    else if (isMagenta) InterlockedAdd(PlayerPixelCounts[4], 1);
    else if (isCyan) InterlockedAdd(PlayerPixelCounts[5], 1);
}